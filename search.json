[{"path":"https://maximesunnen.github.io/flowFate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Maxime Sünnen Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maximesunnen.github.io/flowFate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maxime Sünnen. Maintainer, author. Aurélien Ginolhac. Author.","code":""},{"path":"https://maximesunnen.github.io/flowFate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sünnen M, Ginolhac (2023). flowFate: Shiny App Flow Cytometry Data. https://github.com/maximesunnen/flowFate, https://maximesunnen.github.io/flowFate/.","code":"@Manual{,   title = {flowFate: Shiny App for Flow Cytometry Data},   author = {Maxime Sünnen and Aurélien Ginolhac},   year = {2023},   note = {https://github.com/maximesunnen/flowFate, https://maximesunnen.github.io/flowFate/}, }"},{"path":"https://maximesunnen.github.io/flowFate/index.html","id":"flowfate","dir":"","previous_headings":"","what":"Shiny App for Flow Cytometry Data","title":"Shiny App for Flow Cytometry Data","text":"FlowFate free, interactive Shiny web application developed automate analysis cell differentiation data obtained flow cytometry. developed flowFate combining existing R packages flowCore flowWorkspace FCS file import data manipulation gating ggcyto visualization customized workflow tailored analysis differentiation data. able automate crucial time-consuming process data analysis using openCyto’s data-driven gating functions. Built {golem}.","code":""},{"path":"https://maximesunnen.github.io/flowFate/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Shiny App for Flow Cytometry Data","text":"FlowFate tailored analyze cell differentiation data obtained according Chippalkatti et al. Briefly, C2C12 type cell ability turn (“differentiate”) muscle cells. , ’re immature state scientists call “undifferentiated”.Technically, one analyze pool C2C12 cells microscope visually determine cells differentiated . Practically way tedious. Luckily, differentiated muscle cells produce specific protein called myosin undifferentiated cells produce (low amounts). One can stain protein antibody attached fluorescent molecule analyze pool cells using flow cytometer. flow cytometer device channels cells small capillary can pass front laser one--one. laser light excites fluorescent molecule attached antibody (attached myosin), response also emits light (different color laser light) can ultimately captured camera. Depending much light captured, one can determine cell differentiated (remember even undifferentiatde cells can produce small amount myosin ’re interested cells produce lot ).","code":""},{"path":"https://maximesunnen.github.io/flowFate/index.html","id":"dockerized-the-app","dir":"","previous_headings":"","what":"Dockerized the app","title":"Shiny App for Flow Cytometry Data","text":"Makes sure folder deploy exists project root. Follow steps dev/03_deploy.R, namely: note, {dockerfiler} needed (uses {pak}). obtain README deploy : deploy folder contains: scp deploy folder `shiny-sever` shinyproxy container_apps/ execute root commands README Make sure use binary versions Linux PPPM RUN R -e \"renv::restore(repos = 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/')\" edit /home/aurelien.ginolhac/deploiement/container_system/shinyproxy-docker/application.yml adding something like: /home/aurelien.ginolhac/deploiement/, run ./relance_machinerie new app linked.","code":"devtools::check() devtools::build() golem::add_dockerfile_with_renv_shinyproxy(output_dir = \"deploy\", lockfile = \"renv.lock\") # if renv.lock.prod is missing attachment::create_renv_for_prod() file.copy(\"renv.lock.prod\", \"deploy/renv.lock.prod\") docker build -f Dockerfile_base --progress=plain -t flowfate_base . docker build -f Dockerfile --progress=plain -t flowfate:latest . docker run -p 3838:3838 flowfate:latest # then go to 127.0.0.1:3838 Dockerfile Dockerfile_base flowFate_0.0.0.9000.tar.gz README renv.lock renv.lock.prod docker build -f Dockerfile_base --progress=plain -t flowfate_base . docker build -f Dockerfile --progress=plain -t flowfate:latest . - id: mdm200504     display-name: MDM200504     container-network: sp-network     description: \"Companion app for the MDM project 200504\"     container-cmd: [\"R\", \"-e\", \"library(mdm200504);options('shiny.port'=3838,shiny.host='0.0.0.0');mdm200504::run_app()\"]     container-image: mdm200504"},{"path":"https://maximesunnen.github.io/flowFate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Shiny App for Flow Cytometry Data","text":"run app R, install R R Studio , run commands R Studio console, defined order. large amount dependencies, can take ~ 15 minutes install app. Users access network University Luxembourg can open app clicking following link: https://shiny-server.uni.lu/app/flowfate.","code":"# install the remotes and BiocManager package install.packages(c(\"remotes\", \"BiocManager\"))  # install dependencies from Bioconductor BiocManager::install(c(\"ggcyto\", \"flowWorkspace\", \"flowCore\")) remotes::install_github(\"openCyto\")  # install the flowFate package remotes::install_github(\"maximesunnen/flowFate\")  # open the app flowFate::run_app()"},{"path":"https://maximesunnen.github.io/flowFate/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"https://maximesunnen.github.io/flowFate/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://maximesunnen.github.io/flowFate/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://maximesunnen.github.io/flowFate/news/index.html","id":"flowfate-0009000","dir":"Changelog","previous_headings":"","what":"flowFate 0.0.0.9000","title":"flowFate 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
